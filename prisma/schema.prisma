generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  todo
  inProgress
  done
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String   

  ownedProjects   Project[]     @relation("ProjectOwner")
  memberships     Membership[]  
  assignedTasks   Task[]        

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Project {
  id      String @id @default(uuid())
  name    String

  ownerId String 
  owner   User   @relation("ProjectOwner", fields: [ownerId], references: [id], onDelete: Cascade)

  memberships Membership[]
  tasks       Task[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("projects")
}

model Membership {
  id        String @id @default(uuid())

  userId    String
  user      User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, projectId])
  @@map("memberships")
}

model Task {
  id          String  @id @default(uuid())
  title       String
  description String?
  status      TaskStatus @default(todo)

  projectId String
  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  assigneeId String?
  assignee   User?   @relation(fields: [assigneeId], references: [id], onDelete: SetNull)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("tasks")
}